@page "/account/delete/{accountId:int}"
@rendermode InteractiveWebAssembly
@inject HttpClient http
@inject NavigationManager navigationManager
@inject IAccountService accountService

<h2>Delete Account</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this account?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Id</td>
                <td>@account.Id</td>
            </tr>
            <tr>
                <td>Name</td>
                <td>@account.Name</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
        <button @onclick="(async () => await RemoveAccount(account.Id))" class="btn btn-danger">
            Delete
        </button>
        <button @onclick="(() => Cancel())" class="btn btn-warning">Cancel</button>
</div>
@code {
    [Parameter]
    public int accountId { get; set; }
    Account account = new();

    protected override async Task OnParametersSetAsync()
    {
        account = await accountService.GetAccountAsync(accountId);
    }
    @* protected override async Task OnInitializedAsync()
{
account = await accountService.GetAccountAsync(accountId);
} *@
    protected async Task RemoveAccount(int userID)
    {
        await accountService.DeleteAccountAsync(userID);
        navigationManager.NavigateTo("/account");
    }
    void Cancel()
    {
        navigationManager.NavigateTo("/account");
    }
}